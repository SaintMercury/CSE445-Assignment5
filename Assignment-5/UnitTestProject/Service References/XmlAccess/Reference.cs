//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestProject.XmlAccess {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="XmlAccess.IXmlAccessService")]
    public interface IXmlAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/AuthenticateMember", ReplyAction="http://tempuri.org/IXmlAccessService/AuthenticateMemberResponse")]
        bool AuthenticateMember(string userNameIn, string passwordIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/AuthenticateMember", ReplyAction="http://tempuri.org/IXmlAccessService/AuthenticateMemberResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateMemberAsync(string userNameIn, string passwordIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/AuthenticateStaff", ReplyAction="http://tempuri.org/IXmlAccessService/AuthenticateStaffResponse")]
        bool AuthenticateStaff(string userNameIn, string passwordIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/AuthenticateStaff", ReplyAction="http://tempuri.org/IXmlAccessService/AuthenticateStaffResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateStaffAsync(string userNameIn, string passwordIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/RegisterMember", ReplyAction="http://tempuri.org/IXmlAccessService/RegisterMemberResponse")]
        void RegisterMember(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/RegisterMember", ReplyAction="http://tempuri.org/IXmlAccessService/RegisterMemberResponse")]
        System.Threading.Tasks.Task RegisterMemberAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/RegisterStaff", ReplyAction="http://tempuri.org/IXmlAccessService/RegisterStaffResponse")]
        void RegisterStaff(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXmlAccessService/RegisterStaff", ReplyAction="http://tempuri.org/IXmlAccessService/RegisterStaffResponse")]
        System.Threading.Tasks.Task RegisterStaffAsync(string userName, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXmlAccessServiceChannel : UnitTestProject.XmlAccess.IXmlAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XmlAccessServiceClient : System.ServiceModel.ClientBase<UnitTestProject.XmlAccess.IXmlAccessService>, UnitTestProject.XmlAccess.IXmlAccessService {
        
        public XmlAccessServiceClient() {
        }
        
        public XmlAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XmlAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XmlAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XmlAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AuthenticateMember(string userNameIn, string passwordIn) {
            return base.Channel.AuthenticateMember(userNameIn, passwordIn);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateMemberAsync(string userNameIn, string passwordIn) {
            return base.Channel.AuthenticateMemberAsync(userNameIn, passwordIn);
        }
        
        public bool AuthenticateStaff(string userNameIn, string passwordIn) {
            return base.Channel.AuthenticateStaff(userNameIn, passwordIn);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateStaffAsync(string userNameIn, string passwordIn) {
            return base.Channel.AuthenticateStaffAsync(userNameIn, passwordIn);
        }
        
        public void RegisterMember(string userName, string password) {
            base.Channel.RegisterMember(userName, password);
        }
        
        public System.Threading.Tasks.Task RegisterMemberAsync(string userName, string password) {
            return base.Channel.RegisterMemberAsync(userName, password);
        }
        
        public void RegisterStaff(string userName, string password) {
            base.Channel.RegisterStaff(userName, password);
        }
        
        public System.Threading.Tasks.Task RegisterStaffAsync(string userName, string password) {
            return base.Channel.RegisterStaffAsync(userName, password);
        }
    }
}
